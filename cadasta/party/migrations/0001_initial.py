# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-05-13 14:18
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organization', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('IN', 'Individual'), ('CO', 'Corporation'), ('GR', 'Group')], default='IN', max_length=2)),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartyRelationship',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('S', 'is-spouse-of'), ('C', 'is-child-of'), ('M', 'is-member-of')], max_length=1)),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('party1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party1', to='party.Party')),
                ('party2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party2', to='party.Party')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='party',
            name='relationships',
            field=models.ManyToManyField(related_name='relationships_set', through='party.PartyRelationship', to='party.Party'),
        ),
    ]
