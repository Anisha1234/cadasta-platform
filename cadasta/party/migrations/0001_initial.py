# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-06-27 09:32
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import jsonattrs.fields
import organization.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('spatial', '0001_initial'),
        ('organization', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalParty',
            fields=[
                ('id', models.CharField(db_index=True, max_length=24)),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('IN', 'Individual'), ('CO', 'Corporation'), ('GR', 'Group')], default='IN', max_length=2)),
                ('contacts', django.contrib.postgres.fields.jsonb.JSONField(default={}, validators=[organization.validators.validate_contact])),
                ('attributes', jsonattrs.fields.JSONAttributeField(default=jsonattrs.fields.JSONAttributes)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organization.Project')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical party',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPartyRelationship',
            fields=[
                ('id', models.CharField(db_index=True, max_length=24)),
                ('type', models.CharField(choices=[('S', 'is-spouse-of'), ('C', 'is-child-of'), ('M', 'is-member-of')], max_length=1)),
                ('attributes', jsonattrs.fields.JSONAttributeField(default=jsonattrs.fields.JSONAttributes)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical party relationship',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTenureRelationship',
            fields=[
                ('id', models.CharField(db_index=True, max_length=24)),
                ('attributes', jsonattrs.fields.JSONAttributeField(default=jsonattrs.fields.JSONAttributes)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical tenure relationship',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTenureRelationshipType',
            fields=[
                ('id', models.CharField(db_index=True, max_length=2)),
                ('label', models.CharField(max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical tenure relationship type',
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('IN', 'Individual'), ('CO', 'Corporation'), ('GR', 'Group')], default='IN', max_length=2)),
                ('contacts', django.contrib.postgres.fields.jsonb.JSONField(default={}, validators=[organization.validators.validate_contact])),
                ('attributes', jsonattrs.fields.JSONAttributeField(default=jsonattrs.fields.JSONAttributes)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parties', to='organization.Project')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PartyRelationship',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('S', 'is-spouse-of'), ('C', 'is-child-of'), ('M', 'is-member-of')], max_length=1)),
                ('attributes', jsonattrs.fields.JSONAttributeField(default=jsonattrs.fields.JSONAttributes)),
                ('party1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party1', to='party.Party')),
                ('party2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party2', to='party.Party')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_relationships', to='organization.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenureRelationship',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('attributes', jsonattrs.fields.JSONAttributeField(default=jsonattrs.fields.JSONAttributes)),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='party.Party')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenure_relationships', to='organization.Project')),
                ('spatial_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spatial.SpatialUnit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenureRelationshipType',
            fields=[
                ('id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='tenurerelationship',
            name='tenure_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenure_type', to='party.TenureRelationshipType'),
        ),
        migrations.AddField(
            model_name='party',
            name='relationships',
            field=models.ManyToManyField(related_name='relationships_set', through='party.PartyRelationship', to='party.Party'),
        ),
        migrations.AddField(
            model_name='party',
            name='tenure_relationships',
            field=models.ManyToManyField(related_name='tenure_relationships', through='party.TenureRelationship', to='spatial.SpatialUnit'),
        ),
        migrations.AddField(
            model_name='historicaltenurerelationship',
            name='party',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='party.Party'),
        ),
        migrations.AddField(
            model_name='historicaltenurerelationship',
            name='project',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organization.Project'),
        ),
        migrations.AddField(
            model_name='historicaltenurerelationship',
            name='spatial_unit',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='spatial.SpatialUnit'),
        ),
        migrations.AddField(
            model_name='historicaltenurerelationship',
            name='tenure_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='party.TenureRelationshipType'),
        ),
        migrations.AddField(
            model_name='historicalpartyrelationship',
            name='party1',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='party.Party'),
        ),
        migrations.AddField(
            model_name='historicalpartyrelationship',
            name='party2',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='party.Party'),
        ),
        migrations.AddField(
            model_name='historicalpartyrelationship',
            name='project',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organization.Project'),
        ),
    ]
