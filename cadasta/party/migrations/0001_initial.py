# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-06-09 09:02
from __future__ import unicode_literals

import datetime
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import organization.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organization', '0001_initial'),
        ('spatial', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('IN', 'Individual'), ('CO', 'Corporation'), ('GR', 'Group')], default='IN', max_length=2)),
                ('contacts', django.contrib.postgres.fields.jsonb.JSONField(default={}, validators=[organization.validators.validate_contact])),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parties', to='organization.Project')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PartyRelationship',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('S', 'is-spouse-of'), ('C', 'is-child-of'), ('M', 'is-member-of')], max_length=1)),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('party1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party1', to='party.Party')),
                ('party2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party2', to='party.Party')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.Project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenureRelationship',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('acquired_how', models.CharField(blank=True, choices=[('CS', 'Contractual/Share Crop'), ('CA', 'Customary Arrangement'), ('GF', 'Gift'), ('HS', 'Homestead'), ('IO', 'Informal Occupant'), ('IN', 'Inheritance'), ('LH', 'Leasehold'), ('PF', 'Purchased Freehold'), ('RN', 'Rental'), ('OT', 'Other')], max_length=2, null=True)),
                ('acquired_date', models.DateField(default=datetime.date.today)),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party', to='party.Party')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organization.Project')),
                ('spatial_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spatial_unit', to='spatial.SpatialUnit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenureRelationshipType',
            fields=[
                ('id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=200)),
            ],
        ),
        migrations.AddField(
            model_name='tenurerelationship',
            name='tenure_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenure_type', to='party.TenureRelationshipType'),
        ),
        migrations.AddField(
            model_name='party',
            name='relationships',
            field=models.ManyToManyField(related_name='relationships_set', through='party.PartyRelationship', to='party.Party'),
        ),
        migrations.AddField(
            model_name='party',
            name='tenure_relationships',
            field=models.ManyToManyField(related_name='tenure_relationships', through='party.TenureRelationship', to='spatial.SpatialUnit'),
        ),
    ]
