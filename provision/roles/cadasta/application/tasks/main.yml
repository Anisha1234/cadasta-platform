- name: Add deadsnakes Python repository
  become: yes
  become_user: root
  apt_repository: repo='ppa:fkrull/deadsnakes'

- name: Install packages
  become: yes
  become_user: root
  apt: pkg={{ item }} state=installed update_cache=yes
  with_items:
      - python3.5
      - python3.5-dev
      - python-virtualenv
      - git
      - unzip

- name: Create base directory for virtual environment
  become: yes
  become_user: root
  file: path="{{ virtualenv_path | dirname }}" state=directory
        owner="{{ app_user }}" mode=0755

- name: Manually create the initial virtualenv
  become: yes
  become_user: "{{ app_user }}"
  command: virtualenv {{ virtualenv_path }} --python=python3.5
           creates="{{ virtualenv_path }}bin"

- name: Upgrade to latest PIP version
  become: yes
  become_user: "{{ app_user }}"
  pip: name=pip state=latest virtualenv="{{ virtualenv_path }}"

- name: Install requirements
  become: yes
  become_user: "{{ app_user }}"
  pip: virtualenv="{{ virtualenv_path }}"
       requirements="{{ application_path }}requirements/common.txt"

- name: Set up logging directory
  become: yes
  become_user: root
  file: path=/var/log/django state=directory owner="{{ app_user }}"

- name: Create temporary data processing directory
  become: yes
  become_user: "{{ app_user }}"
  file: path="{{ application_path }}cadasta/geography/data" state=directory

- name: Download world boundary data files
  become: yes
  become_user: "{{ app_user }}"
  get_url: url=http://thematicmapping.org/downloads/TM_WORLD_BORDERS-0.3.zip
           dest="{{ application_path }}cadasta/geography/data"

- name: Unzip world boundary data files
  become: yes
  become_user: "{{ app_user }}"
  unarchive: creates="{{ application_path }}cadasta/geography/data/TM_WORLD_BORDERS-0.3.shp"
             src="{{ application_path }}cadasta/geography/data/TM_WORLD_BORDERS-0.3.zip"
             dest="{{ application_path }}cadasta/geography/data" copy=no

- name: Django migrate
  become: yes
  become_user: "{{ app_user }}"
  django_manage: command=migrate
                 app_path="{{ application_path }}cadasta"
                 virtualenv="{{ virtualenv_path }}"
                 settings="{{ django_settings }}"

- name: Load country boundary data
  become: yes
  become_user: "{{ app_user }}"
  django_manage: command=loadcountries
                 app_path="{{ application_path }}cadasta"
                 virtualenv="{{ virtualenv_path }}"
                 settings="{{ django_settings }}"

- name: Install Bootstrap for SASS processing
  become: yes
  become_user: "{{ app_user }}"
  command: chdir="{{ application_path }}cadasta/core"
           npm install bootstrap-sass
